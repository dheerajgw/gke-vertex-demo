name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REPO_NAME: node-app-repo
      AR_REGION: ${{ secrets.AR_REGION }}
      GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
      GKE_ZONE: ${{ secrets.GKE_ZONE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: gcloud auth context (diagnostics)
        run: |
          gcloud auth list
          gcloud config list

      - name: Print SA email from credentials
        run: |
          python - <<'PY'
          import os, json, glob
          path = os.environ.get('GOOGLE_APPLICATION_CREDENTIALS') or (glob.glob('**/*.json', recursive=True)[:1][0])
          with open(path) as f:
              data = json.load(f)
          print("CREDENTIAL FILE:", path)
          print("SERVICE ACCOUNT:", data.get("client_email"))
          PY

      - name: Sanity: list Artifact Registry repos
        run: |
          AR="${AR_REGION:-}"
          AR="${AR:-us-central1}"
          gcloud artifacts repositories list --location="$AR" || true
          gcloud artifacts repositories describe "${REPO_NAME}" \
            --location="$AR" \
            --project="${PROJECT_ID}"

      - name: Artifact Registry docker login
        run: |
          AR="${AR_REGION:-}"
          AR="${AR:-us-central1}"
          HOST="${AR}-docker.pkg.dev"
          echo "Logging in to ${HOST}"
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin "https://${HOST}"

      - name: Build & Push Image
        run: |
          AR="${AR_REGION:-}"
          AR="${AR:-us-central1}"
          HOST="${AR}-docker.pkg.dev"
          IMAGE_URI="${HOST}/${PROJECT_ID}/${REPO_NAME}/fancy-app"
          GIT_SHA=$(git rev-parse HEAD)

          echo "Building and pushing ${IMAGE_URI}:latest and ${IMAGE_URI}:${GIT_SHA}"

          docker build -t "${IMAGE_URI}:latest" -t "${IMAGE_URI}:${GIT_SHA}" .
          docker push "${IMAGE_URI}:latest"
          docker push "${IMAGE_URI}:${GIT_SHA}"

      - name: Install GKE auth plugin
        run: |
          sudo apt-get update -y
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials "${GKE_CLUSTER}" \
            --zone "${GKE_ZONE}" \
            --project "${PROJECT_ID}"

      - name: Deploy manifests
        run: |
          kubectl apply -f k8s/
